#!/usr/bin/env bash
# Copyright 2019-2021 releng-tool
set -e

################################################################################

help=0
locale_dir=
target=
target_dir=
while [ "$#" -gt 0 ]; do
    case $1 in
        --help)
        help=1
        break 2
        ;;
        --locale|-L)
        locale_dir="$2"
        shift
        ;;
        --version)
        target="$2"
        shift
        ;;
        --version-dir)
        target_dir="$2"
        shift
        ;;
    esac
    shift
done

if [ $help -eq 1 ]; then
    cat << HELP_EOM
fetch <options>

 -h, --help                show this help
 -L, --locale <dir>        the directory to fetch locale data from
 --version <version>       build only a specific version
 --version-dir <dir>       prepared directory to use for the version build
HELP_EOM
    exit 0
fi

if [ -n "$target_dir" ]; then
    if [ -z "$target" ]; then
        echo "error) provided a version directory without a version"
        exit 1
    fi
fi

################################################################################

# find absolute path to locale directory (if provided and exists)
if [ -n "$locale_dir" ]; then
    locale_dir="$(cd "$(dirname "$locale_dir")"; pwd -P)/$(basename "$locale_dir")"
fi

base="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
source $base/common
source $base/settings
out_dir=$base/_build

# cleanup legacy working directory
rm -rf $base/$workdir
rm -rf $out_dir

if [ -z "$locale_dir" ]; then
    locale_dir=$base/$workdir/$locale_container

    mkdir -p $locale_dir
    git \
        --git-dir="$base/$cache/$locale_container" \
        --work-tree="$locale_dir" \
        checkout master --force
fi

source $locale_dir/settings

# ensure translations are up-to-date
bash releng_tool_docbuilder_locale/compile-catalog

# include a "latest" version pointing to most_stable_version
versions+=(['latest']=${versions[$most_stable_version]})

for version in "${!versions[@]}"; do
    # skip version if not matching to the target (if set)
    if [ -n "$target" ]; then
        if [ "$version" != "$target" ]; then
            continue
        fi
    fi

    # use legacy builder for older versions (to preserve older links)
    minor=${version##*.}
    version_builder=$builder
    if [ -n "${minor##*[!0-9]*}" ]; then
        if [ $minor -lt 10 ]; then
            version_builder=html
        fi
    fi

    reference=${versions[$version]}

    # compile a list of supported languages for this version
    support_version=$version
    if [[ "$support_version" == 'latest' ]]; then
        support_version=$most_stable_version
    fi

    languages=('en')
    for ref in $(ls -d $locale_dir/locale-$support_version/*/); do
        lang_dir=${ref%%/}
        lang=${lang_dir##*/}

        # skip pot directory
        if [[ "$lang" == 'pot' ]]; then
            continue
        fi

        languages+=($lang)
    done

    # compile a list of languages
    lang_list=$(printf ",%s" "${languages[@]}")
    lang_list=${lang_list:1}

    for lang in "${languages[@]}"; do
        lang_target_dir=$out_dir/$lang/$version
        echo -e "\e[7mbuilding $version ($lang)...\e[0m"

        if [ -n "$target_dir" ]; then
            export RELENG_TARGET_DIR=$target_dir
        else
            # checkout specific documentation version
            mkdir -p $base/$workdir/$doc_container
            git \
                --git-dir="$base/$cache/$doc_container" \
                --work-tree="$base/$workdir/$doc_container" \
                checkout $reference --force
            export RELENG_TARGET_DIR=$base/$workdir/$doc_container
        fi

        # build documentation
        export RELENG_LANGUAGE=$lang
        export RELENG_LANGUAGES=$lang_list
        export RELENG_LOCALE_DIR=$locale_dir/locale-$support_version/
        export RELENG_STABLE=$most_stable_version
        export RELENG_VERSION=$version
        export RELENG_VERSIONS=$ordered_versions
        python -m sphinx \
            -Dlanguage=$lang \
            -b $version_builder \
            $base \
            $lang_target_dir \
            -E -a -W
    done
done
